#ui-grid-columns-collect(@bp-search, @postfix-search) {}

#ui-grid-columns
{
	@props: width, widthpx, toleft, toright, offset;

	.generate-mixins(@bp-class-up, @bp-class-down, @bp-class-only, @postfix-raw)
	{
		@postfix: if(@postfix-raw = false, ~'', ~'-@{postfix-raw}');
		@props: #ui-grid-columns[@props];

		each(@props, .(@prop)
		{
			@prop-stem: replace(@prop, 'width', '');
			@stem: if(@prop = width, @prop-stem, ~'-@{prop-stem}');

			.@{bp-class-up}@{stem}@{postfix}
			{
				.-(@col-number)
				{
					#ui-grid-columns-collect(@bp-search, @postfix-search)
						when
							(@bp-search = @bp-class-up) and
							(@postfix-search = @postfix-raw)
					{
						@data: {
							prop:    @prop;
							number:  @col-number;
							prefix:  @bp-class-up;
							stem:    @stem;
							postfix: ~'@{postfix}-@{col-number}';
						}
					}
				}
			}
			.@{bp-class-down}@{stem}@{postfix}
			{
				.-(@col-number)
				{
					#ui-grid-columns-collect(@bp-search, @postfix-search)
						when
							(@bp-search = @bp-class-down) and
							(@postfix-search = @postfix-raw)
					{
						@data: {
							prop:    @prop;
							number:  @col-number;
							prefix:  @bp-class-down;
							stem:    @stem;
							postfix: ~'@{postfix}-@{col-number}';
						}
					}
				}
			}
			.@{bp-class-only}@{stem}@{postfix}
			{
				.-(@col-number)
				{
					#ui-grid-columns-collect(@bp-search, @postfix-search)
						when
							(@bp-search = @bp-class-only) and
							(@postfix-search = @postfix-raw)
					{
						@data: {
							prop:    @prop;
							number:  @col-number;
							prefix:  @bp-class-only;
							stem:    @stem;
							postfix: ~'@{postfix}-@{col-number}';
						}
					}
				}
			}
		});
	}

	.generate-css(@collected, @columns-total)
	{
		each(@collected, .(@data)
		{
			@prop:   @data[prop];
			@number: @data[number];

			@prefix:  @data[prefix];
			@stem:    @data[stem];
			@postfix: @data[postfix];

			.@{prefix}@{stem}@{postfix}
			{
				@rate: round(percentage(@number / @columns-total), 4);

				#ui-grid-columns-css.apply(@prop, @rate);
			}
		});
	}
}
