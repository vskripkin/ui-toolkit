#ui-grid-base-collect()
{
	@grid: false;
}


#ui-grid-base
{
	.generate-base-mixins()
	{
		.use-grid()
		{
			#ui-grid-base-collect()
			{
				@grid: true;
			}
		}
	}

	.generate-base-css(@collected, @bp-name: false)
	{
		& when (@collected[@grid]) and (@bp-name = false)
		{
			#ui-grid-base-css.grid();
			#ui-grid-base-css.item();
		}
		& when (@collected[@grid]) and not (@bp-name = false)
		{
			#ui-grid-base-css.gaps(@break-points[@@bp-name][gap]);
		}
	}


	@props: inline, table, table-inline;

	.generate-mixins(@bp)
	{
		#ui-generator.mixins(base, #ui-grid-base[@props], @bp);
	}
	.generate-css(@collected, @bp-name)
	{
		#ui-generator.css(base, @collected, @bp-name);
	}
}
