#ui-grid-helpers-collect(@bp-class) {};

#ui-grid-helpers
{
	@props:
		tight, auto,

		row, row-rev, column, column-rev,
		nowrap, wrap, wrap-rev,

		x-top,     y-top,
		x-middle,  y-middle,
		x-bottom,  y-bottom,
		x-left,    y-left,
		x-center,  y-center,
		x-right,   y-right,

		space-between, space-around,
		stretch, start, center, end,

		fisrt, last, initial,
		overflow-on, overflow-off,

		first-cell, initial-cell,
		valign-top, valign-middle, valign-bottom,

		grow-0, shrink-0,
		grow-1, grow-2, grow-3, grow-4, grow-5,
		grow-6, grow-7, grow-8, grow-9, grow-10,
		shrink-1, shrink-2, shrink-3, shrink-4, shrink-5,
		shrink-6, shrink-7, shrink-8, shrink-9, shrink-10;


	.generate-mixins(@bp-class-up, @bp-class-down, @bp-class-only)
	{
		@props: #ui-grid-helpers[@props];

		each(@props, .(@prop)
		{
			@class-up:   ~'@{bp-class-up}-@{prop}';
			@class-down: ~'@{bp-class-down}-@{prop}';
			@class-only: ~'@{bp-class-only}-@{prop}';

			.@{class-up}
			{
				#ui-grid-helpers-collect(@bp-search) when (@bp-search = @bp-class-up)
				{
					@{prop}: @class-up;
				}
			}
			.@{class-down}
			{
				#ui-grid-helpers-collect(@bp-search) when (@bp-search = @bp-class-down)
				{
					@{prop}: @class-down;
				}
			}
			.@{class-only}
			{
				#ui-grid-helpers-collect(@bp-search) when (@bp-search = @bp-class-only)
				{
					@{prop}: @class-only;
				}
			}
		});
	}

	.generate-css(@bp-class)
	{
		@collected: #ui-grid-helpers-collect(@bp-class);

		each(@collected, .(@class, @prop)
		{
			.@{class}
			{
				#ui-grid-helpers-css.apply(@prop);
			}
		});
	}
}
