#ui-grid-columns-css
{
	.width(@width)
	{
		flex-basis: auto;
		width:      @width;
		max-width:  @width;
	}
	.widthpx(@val)
	{
		@width: round(@grid-width * unit(@val / 100), 3);

		flex-basis: auto;
		width:      @width;
		max-width:  @width;
	}
	.toright(@range)
	{
		@{grid-default-dir}:  @range;
		@{grid-opposite-dir}: auto;
	}
	.toleft(@range)
	{
		@{grid-opposite-dir}: @range;
		@{grid-default-dir}:  auto;
	}
	.offset(@range)
	{
		margin-@{grid-default-dir}: @range !important;
	}


	.width-tight()
	{
		flex-grow: 0;
		flex-basis: auto;

		width: auto;
		max-width: 100%;
	}
	.width-auto()
	{
		flex-grow: 1;
		flex-basis: 0;

		width: auto;
		max-width: 100%;
	}


	.apply(@type, @val)
	{
		& when (@type = width)   { #ui-grid-columns-css.width(@val);   }
		& when (@type = widthpx) { #ui-grid-columns-css.widthpx(@val); }
		& when (@type = toright) { #ui-grid-columns-css.toright(@val); }
		& when (@type = toleft)  { #ui-grid-columns-css.toleft(@val);  }
		& when (@type = offset)  { #ui-grid-columns-css.offset(@val);  }

		& when (@type = tight)   { #ui-grid-columns-css.width-tight(); }
		& when (@type = auto)    { #ui-grid-columns-css.width-auto();  }
	}
}
