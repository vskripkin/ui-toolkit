@import 'base';
@import 'base-css';
@import 'columns';
@import 'columns-css';
@import 'helpers';
@import 'helpers-css';


#ui-grid
{
	.mixins()
	{
		each(@break-points-order, .(@bp-name)
		{
			@bp-class: @break-points[@@bp-name][class];

			@bp-class-up:   if(@class-up-key   = false, ~'@{bp-class}', ~'@{bp-class}-@{class-up-key}');
			@bp-class-down: if(@class-down-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-down-key}');
			@bp-class-only: if(@class-only-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-only-key}');

			#ui-grid-cols.generate-mixins(@bp-class-up, @bp-class-down, @bp-class-only);
			#ui-grid-base.generate-mixins(@bp-class-up, @bp-class-down, @bp-class-only);
			#ui-grid-hlps.generate-mixins(@bp-class-up, @bp-class-down, @bp-class-only);
		});
	}

	.collect()
	{
		#ui-grid-used.css();

		each(@break-points-order, .(@bp-name)
		{
			@bp-class: @break-points[@@bp-name][class];

			@bp-class-up:   if(@class-up-key   = false, ~'@{bp-class}', ~'@{bp-class}-@{class-up-key}');
			@bp-class-down: if(@class-down-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-down-key}');
			@bp-class-only: if(@class-only-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-only-key}');


			@css-up:
			{
				#ui-grid-used.css(@bp-name);

				#ui-grid-base.generate-css(@bp-class-up);
				#ui-grid-cols.generate-css(@bp-class-up);
				#ui-grid-hlps.generate-css(@bp-class-up);
			};

			@css-down:
			{
				#ui-grid-base.generate-css(@bp-class-down);
				#ui-grid-cols.generate-css(@bp-class-down);
				#ui-grid-hlps.generate-css(@bp-class-down);
			};

			@css-only:
			{
				#ui-grid-base.generate-css(@bp-class-only);
				#ui-grid-cols.generate-css(@bp-class-only);
				#ui-grid-hlps.generate-css(@bp-class-only);
			};


			#ui-grid.apply-collected(@break-points[@@bp-name][mq-up],   @css-up);
			#ui-grid.apply-collected(@break-points[@@bp-name][mq-down], @css-down);
			#ui-grid.apply-collected(@break-points[@@bp-name][mq-only], @css-only);
		});
	}

	.apply-collected(@media-query, @css) when not (@media-query = false)
	{
		& when (@media-query = start)
		{
			@css();
		}
		& when not (@media-query = start)
		{
			@media @media-query
			{
				@css();
			}
		}
	}
}


#ui-grid.mixins();

&
{
	#ui-grid.collect();
}
