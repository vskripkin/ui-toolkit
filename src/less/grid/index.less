@import 'base';
@import 'base-css';
@import 'columns';
@import 'columns-css';
@import 'helpers';
@import 'helpers-css';


#ui-grid
{
	.mixins()
	{
		#ui-grid-base.generate-base-mixins();

		each(@break-points-order, .(@bp-name)
		{
			@class: @break-points[@@bp-name][class];

			each(@grid-columns, .(@grid-cols)
			{
				#ui-grid-columns.generate-mixins(@class, @grid-cols[postfix]);
			});

			#ui-grid-base.generate-mixins(@class);
			#ui-grid-helpers.generate-mixins(@class);
		});
	}

	.collect()
	{
		@grid-base: #ui-grid-base-collect();
		#ui-grid-base.generate-base-css(@grid-base);

		each(@break-points-order, .(@bp-name)
		{
			@bp-class: @break-points[@@bp-name][class];

			@mq-up:   @break-points[@@bp-name][mq-up];
			@mq-down: @break-points[@@bp-name][mq-down];
			@mq-only: @break-points[@@bp-name][mq-only];


			@css-up:
			{
				#ui-grid-base.generate-base-css(@grid-base, @bp-name);

				@base-up: #ui-collector(base, @bp-class, up);
				#ui-grid-base.generate-css(@base-up, @bp-name);

				each(@grid-columns, .(@grid-cols)
				{
					@columns: @grid-cols[columns];
					@postfix: @grid-cols[postfix];

					@cols-up: #ui-grid-columns-collect(@bp-class, @postfix, up);
					#ui-grid-columns.generate-css(@cols-up, @columns);
				});

				@hlps-up: #ui-collector(helpers, @bp-class, up);
				#ui-grid-helpers.generate-css(@hlps-up, @bp-name);
			};

			@css-down:
			{
				@base-down: #ui-collector(base, @bp-class, down);
				#ui-grid-base.generate-css(@base-down, @bp-name);

				each(@grid-columns, .(@grid-cols)
				{
					@columns: @grid-cols[columns];
					@postfix: @grid-cols[postfix];

					@cols-down: #ui-grid-columns-collect(@bp-class, @postfix, down);
					#ui-grid-columns.generate-css(@cols-down, @columns);
				});

				@hlps-down: #ui-collector(helpers, @bp-class, down);
				#ui-grid-helpers.generate-css(@hlps-down, @bp-name);
			};

			@css-only:
			{
				@base-only: #ui-collector(base, @bp-class, only);
				#ui-grid-base.generate-css(@base-only, @bp-name);

				each(@grid-columns, .(@grid-cols)
				{
					@columns: @grid-cols[columns];
					@postfix: @grid-cols[postfix];

					@cols-only: #ui-grid-columns-collect(@bp-class, @postfix, only);
					#ui-grid-columns.generate-css(@cols-only, @columns);
				});

				@hlps-only: #ui-collector(helpers, @bp-class, only);
				#ui-grid-helpers.generate-css(@hlps-only, @bp-name);
			};

			#ui-grid.apply-collected(@mq-up,   @css-up);
			#ui-grid.apply-collected(@mq-down, @css-down);
			#ui-grid.apply-collected(@mq-only, @css-only);
		});
	}

	.apply-collected(@media-query, @css)
	{
		& when (@media-query = start)
		{
			@css();
		}
		& when not (@media-query = start) and not (@media-query = false)
		{
			@media @media-query
			{
				@css();
			}
		}
	}
}


#ui-grid.mixins();

&
{
	#ui-grid.collect();
}
