#ui
{
	.make-checkbox(@size, @pseudo: '.pseudo', @label: '.label')
	{
		.__checkbox-states()
		{
			.checkbox-states();
			#ui > ._checkbox > ._states();
		}

		#ui > ._checkbox > .construct(@size, @pseudo, @label);
	}

	._checkbox()
	{
		._states()
		{
			.default() {};
			.hover() {};
			.focus() {};
			.active() {};
			.checked() {};
			.disabled() {};
			.disabled_checked() {};
		}

		.construct(@size, @_pseudo, @_label)
		{
			@pseudo: ~'@{_pseudo}';
			@label:  ~'@{_label}';

			#ui > ._checkbox > .template(@pseudo, @label);

			&
			{
				.__checkbox-states();

				& ~ @{pseudo}
				{
					#ui > ._checkbox > .size(@size);
					.default();
				}
				& ~ @{pseudo}:hover, label:hover & ~ @{pseudo}
				{
					.hover();
				}
				& ~ @{pseudo}:active, label:hover & ~ @{pseudo}:active
				{
					.active();
				}
				&:checked ~ @{pseudo},
				&:checked ~ @{pseudo}:hover,
				&:checked ~ @{pseudo}:active,
				label:hover &:checked ~ @{pseudo}
				{
					.checked();
				}
				&:disabled ~ @{pseudo},
				&:disabled ~ @{pseudo}:hover,
				&:disabled ~ @{pseudo}:active,
				label:hover &:disabled ~ @{pseudo}
				{
					.disabled();
				}
				&:disabled:checked ~ @{pseudo},
				&:disabled:checked ~ @{pseudo}:hover,
				&:disabled:checked ~ @{pseudo}:active,
				label:hover &:disabled:checked ~ @{pseudo}
				{
					.disabled_checked();
				}

				& ~ @{label}
				{
					@{label}--checked,
					@{label}--disabled,
					@{label}--disabled-checked
					{
						display: none;
					}
					@{label}--default
					{
						display: block;
					}
				}
				&:checked ~ @{label}
				{
					@{label}--default,
					@{label}--disabled,
					@{label}--disabled-checked
					{
						display: none;
					}
					@{label}--checked
					{
						display: block;
					}
				}
				&:disabled ~ @{label}
				{
					@{label}--default,
					@{label}--checked,
					@{label}--disabled-checked
					{
						display: none;
					}
					@{label}--disabled
					{
						display: block;
					}
				}
				&:disabled:checked ~ @{label}
				{
					@{label}--default,
					@{label}--checked,
					@{label}--disabled
					{
						display: none;
					}
					@{label}--disabled-checked
					{
						display: block;
					}
				}
			}
		}

		.template(@pseudo, @label)
		{
			&
			{
				position: absolute !important;
				width: 1px !important;
				height: 1px !important;
				clip: rect(2px, 2px, 2px, 2px) !important;
			}

			& ~ @{pseudo}, & ~ @{label}
			{
				display: inline-block;
				position: relative;
				vertical-align: middle;
				cursor: pointer;
			}
			&:disabled ~ @{pseudo}, &:disabled ~ @{label}
			{
				cursor: auto !important;
			}

			& ~ @{pseudo}
			{
				user-select: none;
				line-height: 0 !important;
				padding: 0 !important;

				&:after
				{
					content: '';
					position: absolute;
					z-index: 0;
					top: 0;
					left: 0;
					border-radius: 0;
					background: transparent;
					transform: scale(0) rotate(-45deg);
				}
			}
			&:checked ~ @{pseudo}
			{
				&:after
				{
					// url('data:image/svg+xml;charset=utf8,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 342.4 342.4"%3E%3Cpath fill="%23fff" d="M290,33.3L118.9 204.4 52.3 137.9 0 190.2 118.9 309.1 342.4 85.6 z"/%3E%3C/svg%3E')

					// url('data:image/svg+xml;charset=utf8,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 26"%3E%3Cpath fill="%23fff" d="M22,3L10 15 4 9 0 13 10 23 26 7 z"/%3E%3C/svg%3E')


					width: 61%;
					height: 37.89%;
					top: 50%;
					left: 50%;
					margin-top: -26.39%;
					margin-left: -29.57%;
					transform: scale(1) rotate(-45deg);
					transform-origin: center;
					border-width: 0 0 0.14em 0.14em;
					border-style: solid;
					border-color: @color-checkbox-sign;
				}
			}
		}

		/***********************************************/

		.size(@size)
		{
			#ui > .size-custom(@size);

			&
			{
				.normal();
				font-size: @font-size !important;
				width: 1em;
				height: 1em;
			}
			&.large
			{
				.large();
				font-size: @font-size !important;
			}
			&.small
			{
				.small();
				font-size: @font-size !important;
			}
		}
	}
}
