#ui()
{
	.button()
	{
		.params();
		#ui-button._params();

		@hover-bg-color:  #ui.hover-bg(@hover, @bg-color)[result];
		@active-bg-color: #ui.active-bg(@hover-bg-color)[result];

		#ui-button.template(@font-size, @pad-ver, @pad-hor, @border-width);
		#ui-button.sizes(@font-size, @prefix);

		&
		{
			background-color: @bg-color;
			color: @color;

			&, &::after
			{
				color: @color;
			}
		}
		&:hover
		{
			background-color: @hover-bg-color;
		}
		&:active
		{
			background-color: @active-bg-color;
		}
		&:disabled
		{
			background-color: @bg-color !important;
			opacity: @button-disabled-opacity !important;
			cursor:  @button-disabled-cursor;

			&, &::after
			{
				color: @color !important;
			}
		}


		.round()
		{
			&.@{prefix}round
			{
				border-radius: 150px;
			}
		}
		.thin()
		{
			&.@{prefix}thin
			{
				padding-left:  @pad-ver;
				padding-right: @pad-ver;
			}
		}
		.circle()
		{
			&.@{prefix}circle
			{
				border-radius: 150px;
				padding-left:  @pad-ver;
				padding-right: @pad-ver;
			}
		}

		.text()
		{
			&.@{prefix}text
			{
				background-color: transparent;

				&, &::after
				{
					color: @bg-color;
				}
				&:hover
				{
					color: @color;
					border-color: @hover-bg-color;
					background-color: @hover-bg-color;

					&, &::after
					{
						color: @color;
					}
				}
				&:active
				{
					border-color: @active-bg-color;
					background-color: @active-bg-color;
				}
			}
		}
		.outline()
		{
			&.@{prefix}outline
			{
				border-color: @bg-color;
				background-color: transparent;

				&, &::after
				{
					color: @bg-color;
				}
				&:hover
				{
					color: @color;
					border-color: @hover-bg-color;
					background-color: @hover-bg-color;

					&, &::after
					{
						color: @color;
					}
				}
				&:active
				{
					border-color: @active-bg-color;
					background-color: @active-bg-color;
				}
			}
		}
		.fount()
		{
			&.@{prefix}fount
			{
				border-color: fade(@color, alpha(@color) / 2 * 100);
				background-color: transparent;

				&:hover
				{
					border-color: @hover-bg-color;
					background-color: @hover-bg-color;
				}
				&:active
				{
					border-color: @active-bg-color;
					background-color: @active-bg-color;
				}
			}
		}
		.ghost()
		{
			&.@{prefix}ghost
			{
				border-color: fade(@color, alpha(@color) / 2 * 100);
				background-color: transparent;

				&:hover
				{
					color: @hover-bg-color;
					border-color: @hover-bg-color;

					&, &::after
					{
						color: @hover-bg-color;
					}
				}
				&:active
				{
					color: @active-bg-color;
					border-color: @active-bg-color;

					&, &::after
					{
						color: @active-bg-color;
					}
				}
			}
		}

		.loading()
		{
			&.@{prefix}loading
			{
				color: transparent !important;

				.keyframes(rotateRight);

				&::after
				{
					content: '';
					// fix disproportions of width and height due to sub-pixel rounding bug
					display: table;
					position: absolute;
					z-index: 100;
					top:  50%;
					left: 50%;
					width:  auto;
					height: auto;
					width:  1.24em;
					height: 1.24em;
					margin-top:  -0.62em;
					margin-left: -0.62em;
					border-radius: 150px;
					border-width: 0.1837em;
					border-style: solid;
					border-color: currentColor transparent transparent currentColor;
					animation: rotateRight 1s infinite linear;

					.keyframes(rotateRight);
				}
			}
		}
	}
}

#ui-button()
{
	._params()
	{
		@prefix:       @button-class-prefix;
		@bg-color:     rgba(255,255,255,0);
		@color:        @button-color;
		@hover:        @button-hover-color-bg;
		@font-size:    @button-font-size;
		@padding-ver:  @button-padding-ver;
		@paddong-hor:  @button-padding-hor;
		@border-width: @button-border-width;
	}

	.template(@font-size, @padding-ver, @padding-hor, @border-width)
	{
		@em: 2 * @padding-ver + 1em * @button-line-height;
		@px: 2 * @border-width;

		min-width:  calc(@em + @px);
		min-height: calc(@em + @px);
		padding:      @padding-ver @padding-hor;
		font-size:    @font-size;
		border-width: @border-width;
	}
	.template(...)
	{
		margin:         @button-margin;
		line-height:    @button-line-height;
		text-transform: @button-text-transform;
		border-radius:  @button-radius;
		border-style:   @button-border-style;

		display: inline-block;
		position: relative;
		overflow: hidden;
		vertical-align: middle;
		font-style: normal;
		text-align: center;
		text-decoration: none;
		border-color: transparent;
		background-clip: border-box;
		cursor: pointer;
		user-select: none;
		appearance: none;
		transition: color 0.1s cubic-bezier(0, 0, 0.2, 1),
					border-color 0.1s cubic-bezier(0, 0, 0.2, 1),
					background-color 0.2s cubic-bezier(0.25,0.8,0.25,1);

		// remove text-decoration for links
		&:hover
		{
			text-decoration: none;
		}
	}


	.sizes(@font-size, @prefix)
	{
		#ui.fs-sizes-mixins(@font-size, @prefix);
	}
}
