.select(...) {};
.arrow(...)  {};
.value-before(...) {};
.value-after(...)  {};

.list(...) {};
.list-label(...) {};
.list-item(...)  {};


#ui()
{
	.selectbox()
	{
		.params();
		#ui-selectbox.params();

		#ui-selectbox.construct(@font-size);

		&-@{postfix}
		{
			#ui-selectbox-list.construct(@font-size);
		}

		#ui-selectbox.sizes(@font-size, @postfix, @prefix);
	}
}

#ui-selectbox()
{
	.params()
	{
		@font-size: @selectbox-font-size;
		@postfix:   @selectbox-list-postfix;
		@prefix:    @selectbox-class-prefix;
	}
	.states()
	{
		.select()
		{
			.placeholder() {};
			.default() {};
			.hover() {};
			.focus() {};
			.opened() {};
			.disabled() {};
			.readonly() {};
		}
		.arrow()
		{
			.default() {};
			.hover() {};
			.focus() {};
			.opened() {};
			.disabled() {};
			.readonly() {};
		}
		.label()
		{
			.default()  {};
			.hover()    {};
			.focus()    {};
			.opened()   {};
			.disabled() {};
			.readonly() {};
		}
		.value-before()
		{
			.default() {};
			.hover() {};
			.focus() {};
			.opened() {};
			.disabled() {};
			.readonly() {};
		}
		.value-after()
		{
			.default() {};
			.hover() {};
			.focus() {};
			.opened() {};
			.disabled() {};
			.readonly() {};
		}
	}

	.construct(@font-size)
	{
		#ui-selectbox.template(@font-size);


		&
		{
			#ui-selectbox.states.select();
			.select();

			.__textfield
			{
				.default();
			}
			&:hover .__textfield
			{
				.hover();
			}
			select:focus ~ .__textfield, .__textfield:focus
			{
				.focus();
			}
			&.__opened .__textfield
			{
				.opened() !important;
			}
			select:disabled ~ .__textfield
			{
				.disabled() !important;
			}
			select[readonly] ~ .__textfield
			{
				.readonly() !important;
			}

			.__value.__placeholder
			{
				.placeholder();
			}
			.__value, .__addon
			{
				.default();
			}
		}

		&
		{
			#ui-selectbox.states.arrow();
			.arrow();

			.__arrow
			{
				.default();
			}
			&:hover .__arrow
			{
				.hover();
			}
			select:focus ~ .__arrow, .__textfield:focus ~ .__arrow
			{
				.focus();
			}
			&.__opened .__arrow
			{
				.opened() !important;
			}
			select:disabled ~ .__arrow
			{
				.disabled() !important;
			}
			select[readonly] ~ .__arrow
			{
				.readonly() !important;
			}
		}

		&
		{
			#ui-selectbox.states.label();
			.label();

			.__label
			{
				.default();
			}
			&:hover .__label
			{
				.hover();
			}
			select:focus ~ .__label, .__textfield:focus ~ .__label, &.__selected ~ .__label
			{
				.focus();
			}
			&.__opened .__label
			{
				.opened() !important;
			}
			select:disabled ~ .__label
			{
				.disabled() !important;
			}
			select[readonly] ~ .__label
			{
				.readonly() !important;
			}
		}

		&
		{
			#ui-selectbox.states.value-before();
			.value-before();

			.__value::before
			{
				.default();
			}
			&:hover .__value::before
			{
				.hover();
			}
			.__textfield:focus ~ .__value::before
			{
				.focus();
			}
			select:disabled ~ .__value::before
			{
				.disabled() !important;
			}
			select[readonly] ~ .__value::before
			{
				.readonly() !important;
			}
		}

		&
		{
			#ui-selectbox.states.value-after();
			.value-after();

			.__value::after
			{
				.default();
			}
			&:hover .__value::after
			{
				.hover();
			}
			.__textfield:focus ~ .__value::after
			{
				.focus();
			}
			select:disabled ~ .__value::after
			{
				.disabled() !important;
			}
			select[readonly] ~ .__value::after
			{
				.readonly() !important;
			}
		}
	}


	.template(@font-size)
	{
		display: inline-block;
		vertical-align: middle;
		position: relative;
		z-index: 1;
		width: auto;
		max-width: 100%;
		font-size: @font-size;
		line-height: @selectbox-line-height;

		// for mobile devices
		select
		{
			position: absolute;
			z-index: 2;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			opacity: 0;
			width: 100%;
			height: 100%;
		}

		.__textfield
		{
			#ui-textfield.template();

			position: absolute;
			z-index: 1;
			top: 0;
			left: 0;
			width: 100% !important;
			height: 100%;
			font-size: 1em !important;
			line-height: inherit !important;

			&[readonly]
			{
				color: transparent !important;
			}
		}

		.__textfield[readonly], .__arrow
		{
			cursor: pointer;
		}
		select:disabled ~ .__textfield, select:disabled ~ .__arrow
		{
			cursor: @selectbox-disabled-cursor;
		}

		select:disabled ~ .__textfield,
		select:disabled ~ .__value,
		select:disabled ~ .__addon,
		select:disabled ~ .__arrow
		{
			opacity: @selectbox-disabled-opacity !important;
		}


		.__inner
		{
			display: flex;
			flex-flow: row nowrap;
			align-items: center;
			min-width: auto;
			max-width: 100%;
			height: 100%;
		}
		.__value           { flex: 1 1 0%;   }
		.__addon, .__arrow { flex: 0 0 auto; }

		.__addon.__left  { order: -1; }
		.__addon.__right { order:  1; }
		.__arrow         { order:  2; }


		.__value, .__addon, .__arrow
		{
			display: block;
			width: auto;
			min-width: auto;
			max-width: 100%;
			overflow: hidden;
			font-size: 1em !important;
		}
		.__value, .__addon
		{
			pointer-events: none;
			position: relative;
			z-index: 2;
			line-height: @selectbox-line-height !important;
			border-radius: 0 !important;
			border-color: transparent !important;
			background: transparent !important;
			box-shadow: none !important;
		}
		.__value
		{
			text-align: left;
			text-overflow: ellipsis;
			white-space: nowrap;
		}
		.__addon
		{
			&.__left
			{
				text-align: left;
				padding-right: 0.5em;
			}
			&.__right
			{
				text-align: right;
				padding-left: 0.5em;
			}
		}
		.__arrow
		{
			align-self: stretch;
			position: relative;
			z-index: 3;
			min-height: 100%;
			text-align: center;
			transition: transform 0.3s ease;
			transform: rotate(0deg);

			width: 1em * @selectbox-line-height;

			&::after
			{
				content: '';
				position: absolute;
				top: 50%;
				left: 50%;
				width: 0;
				height: 0;
				margin-top: -0.17857em;
				margin-left: -0.35714em;

				border-width: 0.35714em 0.35714em 0;
				border-style: solid;
				border-color: currentColor transparent transparent;
			}
		}


		.__value[data-before]::before
		{
			content: attr(data-before);
		}
		.__value[data-after]::after
		{
			content: attr(data-after);
		}
		.__value.__placeholder::before, .__value.__placeholder::after
		{
			content: none !important;
		}

		&.__open.__under,
		&.__open.__under .__textfield,
		&.__open.__under .__arrow
		{
			border-bottom-left-radius: 0 !important;
			border-bottom-right-radius: 0 !important;
		}
		&.__open.__above,
		&.__open.__above .__textfield,
		&.__open.__above .__arrow
		{
			border-top-left-radius: 0 !important;
			border-top-right-radius: 0 !important;
		}
		&.__open.__above .__arrow
		{
			transform: rotate(180deg);
		}
	}


	.sizes(@font-size, @postfix, @prefix)
	{
		#ui.fs-sizes(@font-size);

		.size-nano()  { &.@{prefix}nano,  &-@{postfix}.@{prefix}nano  { font-size: @size-nano;  }}
		.size-mini()  { &.@{prefix}mini,  &-@{postfix}.@{prefix}mini  { font-size: @size-mini;  }}
		.size-tiny()  { &.@{prefix}tiny,  &-@{postfix}.@{prefix}tiny  { font-size: @size-tiny;  }}
		.size-small() { &.@{prefix}small, &-@{postfix}.@{prefix}small { font-size: @size-small; }}

		.size-big()   { &.@{prefix}big,   &-@{postfix}.@{prefix}big   { font-size: @size-big;   }}
		.size-large() { &.@{prefix}large, &-@{postfix}.@{prefix}large { font-size: @size-large; }}
		.size-huge()  { &.@{prefix}huge,  &-@{postfix}.@{prefix}huge  { font-size: @size-huge;  }}
		.size-great() { &.@{prefix}great, &-@{postfix}.@{prefix}great { font-size: @size-great; }}

		.size-apply()
		{
			.size-nano();
			.size-mini();
			.size-tiny();
			.size-small();

			.size-big();
			.size-large();
			.size-huge();
			.size-great();
		}
	}
}

#ui-selectbox-list()
{
	.states()
	{
		.list()
		{
			.default() {};
			.under() {};
			.above() {};
		}
		.list-label()
		{
			.default() {};
			.hover() {};
		}
		.list-item()
		{
			.default() {};
			.hover() {};
			.disabled() {};

			.in-optgroup() {};
			.has-nested() {};
			.selected() {};
		}
	}

	.construct(@font-size)
	{
		#ui-selectbox-list.template(@font-size);

		&
		{
			#ui-selectbox-list.states.list();
			.list();

			&, ul
			{
				.default();
			}
			&.__under
			{
				.under();
			}
			&.__above
			{
				.above();
			}
		}

		.__label
		{
			#ui-selectbox-list.states.list-label();
			.list-label();

			&
			{
				.default();
			}
			&:hover
			{
				.hover();
			}
		}

		.__item
		{
			#ui-selectbox-list.states.list-item();
			.list-item();

			&
			{
				.default();
			}
			&:hover
			{
				.hover();
			}
			&.__in-optgroup
			{
				.in-optgroup();
			}
			&.__has-nested
			{
				.has-nested();
			}
			&.__selected
			{
				.selected();
			}
			&:disabled
			{
				.disabled();
			}
		}
	}

	.template(@font-size)
	{
		#ui.dropdown-list();

		&
		{
			font-size: @font-size;
		}

		&, ul
		{
			width: auto !important;
			overflow-x: hidden;
			overflow-y: auto;
			min-width: 0;
			max-height: 40rem;
			max-height: 40vh;

			&.__with-attr > .__item::after
			{
				content: ' - 'attr(data-value);
				font-size: 0.9em;
			}
		}

		&.__scroll
		{
			overflow-x: hidden !important;
			overflow-y: scroll !important;
		}

		&.__with-nested
		{
			max-height: none;
			overflow: visible !important;
		}

		&.__decimal
		{
			counter-reset: option_num;

			& > .__item
			{
				display: table;
				width: 100%;
				word-break: break-word;

				&::before
				{
					counter-increment: option_num;
					content: counter(option_num)'.';
					display: table-cell;
					width: 1px;
					padding-right: 0.5rem;
					white-space: nowrap;
				}
			}
		}

		&.__oneline
		{
			&, ul
			{
				max-width: none !important;

				& > .__item
				{
					white-space: nowrap;
					word-break: normal;
				}
			}
		}
	}
}
