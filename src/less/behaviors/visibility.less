#ui-vis-collect(@bp, @prop-mode) { @used: false; }

#ui-vis()
{
	.css()
	{
		display: none !important;
	}


	.generate-mixins(@bp-class)
	{
		@bp-class-up:   if(@class-up-key   = false, ~'@{bp-class}', ~'@{bp-class}-@{class-up-key}');
		@bp-class-down: if(@class-down-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-down-key}');
		@bp-class-only: if(@class-only-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-only-key}');


		.hide-@{bp-class-up}
		{
			#ui-vis-collect(@bp, hide-up) when (@bp = @bp-class)
			{
				@used: true;
			}
		}
		.hide-@{bp-class-down}
		{
			#ui-vis-collect(@bp, hide-down) when (@bp = @bp-class)
			{
				@used: true;
			}
		}
		.hide-@{bp-class-only}
		{
			#ui-vis-collect(@bp, hide-only) when (@bp = @bp-class)
			{
				@used: true;
			}
		}

		.show-@{bp-class-up}
		{
			#ui-vis-collect(@bp, show-up) when (@bp = @bp-class)
			{
				@used: true;
			}
		}
		.show-@{bp-class-down}
		{
			#ui-vis-collect(@bp, show-down) when (@bp = @bp-class)
			{
				@used: true;
			}
		}
		.show-@{bp-class-only}
		{
			#ui-vis-collect(@bp, show-only) when (@bp = @bp-class)
			{
				@used: true;
			}
		}
	}


	.mixins()
	{
		each(@break-points-order, .(@bp-name)
		{
			#ui-vis.generate-mixins(@break-points[@@bp-name][class]);
		});
	}

	.collect()
	{
		each(@break-points-order, .(@bp-name)
		{
			@bp-class: @break-points[@@bp-name][class];

			@bp-class-up:   if(@class-up-key   = false, ~'@{bp-class}', ~'@{bp-class}-@{class-up-key}');
			@bp-class-down: if(@class-down-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-down-key}');
			@bp-class-only: if(@class-only-key = false, ~'@{bp-class}', ~'@{bp-class}-@{class-only-key}');


			& when (#ui-vis-collect(@bp-class, hide-up)[] = true)
			{
				#ui-vis.apply-collected(@break-points[@@bp-name][mq-up], ~'hide-@{bp-class-up}');
			}
			& when (#ui-vis-collect(@bp-class, hide-down)[] = true)
			{
				#ui-vis.apply-collected(@break-points[@@bp-name][mq-down], ~'hide-@{bp-class-down}');
			}
			& when (#ui-vis-collect(@bp-class, hide-only)[] = true)
			{
				#ui-vis.apply-collected(@break-points[@@bp-name][mq-only], ~'hide-@{bp-class-only}');
			}

			& when (#ui-vis-collect(@bp-class, show-up)[] = true)
			{
				#ui-vis.apply-collected(@break-points[@@bp-name][mq-lower], ~'show-@{bp-class-up}');
			}
			& when (#ui-vis-collect(@bp-class, show-down)[] = true)
			{
				#ui-vis.apply-collected(@break-points[@@bp-name][mq-higher], ~'show-@{bp-class-down}');
			}
			& when (#ui-vis-collect(@bp-class, show-only)[] = true)
			{
				#ui-vis.apply-collected(@break-points[@@bp-name][mq-except], ~'show-@{bp-class-only}');
			}
		});
	}

	.apply-collected(@media-query, @class) when not (@media-query = false)
	{
		& when (@media-query = start)
		{
			.@{class}
			{
				#ui-vis.css();
			}
		}
		& when not (@media-query = start)
		{
			@media @media-query
			{
				.@{class}
				{
					#ui-vis.css();
				}
			}
		}
	}
}


#ui-vis.mixins();

&
{
	#ui-vis.collect();
}
